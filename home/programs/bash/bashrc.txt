#!/bin/bash

shopt -s autocd #Allow to cd into directory with just directory name
#check the window size after each command and, if necessary update values of LINES and COLUMNS
shopt -s checkwinsize

#ssh
eval $(ssh-agent) > /dev/null

no_color=$(tput sgr0)
bold=$(tput bold)
reset=$(tput sgr0)

red=$(tput setaf 1)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
green=$(tput setaf 2)
magenta=$(tput setaf 5)
white=$(tput setaf 7)

nix_shell_prompt() {
 [ -n "$IN_NIX_SHELL" ] && echo -n "(${name}) "
}

parse_git_branch() {
    gitstatus="$(git status 2> /dev/null)"
    if [[ `echo $gitstatus | grep "Changes to be committed"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1***)/'
    elif [[ `echo $gitstatus | grep "Changes not staged for commit"` != "" ]]
    then
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1**)/'
    elif [[ `echo $gitstatus | grep "Untracked"` != "" ]]
    then
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1*)/'
    elif [[ `echo "$gitstatus" | grep "nothing to commit"` != "" ]]
    then
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
    else
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1?)/'
    fi
}

# Echo a non-printing color character depending on whether or not the current git branch is the master
# DOES not print the branch name
# Use the parse_git_branch() function for that
is_master_or_main() {
    local branch_name=$1
    [[ $branch_name =~ \(master|\(main ]]  # Checks if branch is 'master' or 'main'
}

count_stars() {
    local branch_name=$1
    # Use grep to extract only the stars after 'master' or 'main'
    echo "$branch_name" | grep -o '\*\+' | wc -c
}

parse_git_branch_color() {
    br=$(parse_git_branch)

    if is_master_or_main "$br"; then
        num_stars=$(count_stars "$br")

        if [[ $num_stars -eq 0 ]]; then
            echo -e "${green}"  # No stars (clean branch)
        elif [[ $num_stars -le 2 ]]; then
            echo -e "${blue}"   # 1 or 2 stars (some changes)
        else
            echo -e "${red}"    # 3 or more stars (major changes)
        fi
    else
        echo -e "${blue}"  # Default color for other branches
    fi
}

export PS1="\[$white\]\$(nix_shell_prompt)\[$bold$red\][\[$yellow\]\u\[$blue\]@\[$green\]\h\[$blue\]:\[$magenta\]\w\[$red\]]\[$(parse_git_branch_color)\]\$(parse_git_branch)\[$reset\]\$ "

#Aliases
#if [ -f ~/.bashrc_aliases ]; then
#     . ~/.bash_aliasees
#fi
alias trash="trash-put"
alias rm="echo 'rm disabled. Use trash to move to Trash/file'"
alias mv="mv -i"
alias cht.sh="~/bin/cht.sh"

# Adding color
alias git='LANG=en_GB git'
alias ls='ls -hN --color=auto --group-directories-first'
alias grep="grep --color=auto"
alias diff="diff --color=auto"
alias ccat="highglight --outt-format-ansi" #Color cat with syntax highlight

export PATH="$HOME/.scripts:$PATH"
